//Admin registration and login 

1. Sending otp to Admin for register :

endpoint: "https://yus.kwscloud.in/yus/send-otp-admin"
method : Post (body)

frontend -> backend(request):
{
    "email"    : "Admin-email(yusadmin@kamarajengg.edu.in)",
    "name"     : "Admin-name",
    "password" : "Admin-password"
}

backend -> frontend (response):
{
    "otp_sent" : "Admin already exists" (or)
    "otp_sent" : true (or)
    "otp_sent" : false (or)
}








2. Verify Otp for Admin registration : 

endpoint : "https://yus.kwscloud.in/yus/verify-otp-admin"
method : Post (body)

frontend -> backend(request):
{
    "email"    : "Admin-email(yusadmin@kamarajengg.edu.in)",
    "name"     : "Admin-name",
    "password" : "Admin-password"
    "otp"      : "000000"
}

backend -> frontend (response):
{
    "status" : "invalid" (or)
    "status" : "invlaid otp" (or)
    "status" : "invalid data" (or)
    "status" : "Admin already exists" (or)
    "status" : "successfully added admin" 
}








3. Admin login : 

endpoint : "https://yus.kwscloud.in/yus/admin-login"
method : Post (body)

frontend -> backend(request):
{
    "email"    : "Admin-email(yusadmin@kamarajengg.edu.in)",
    "password" : "Admin-password"
}

backend -> frontend (response):
{
    "login_status" : "valid" (or) 
    "login_status" : "invalid"
}







//Bus and driver Scheduling

1. Get all available routes:

endpoint : "https://yus.kwscloud.in/yus/get-available-routes"
method : Get 

backend -> frontend (response):
{
    [
        {
            "route_id": 1,
            "route_name": "salem to madurai",
            "src": "salem",
            "dest": "madurai",
            "direction": "UP",
            "available": false,
            "bus_id": 6
        },
        {
            "route_id": 2,
            "route_name": "chennai to madurai",
            "src": "chennai",
            "dest": "madurai",
            "direction": "UP",
            "available": true,
            "bus_id": 0
        }
    ]
}







2. Add new Bus :

endpoint : "https://yus.kwscloud.in/yus/add-new-bus?bus_id=6"
method : Put (Query Parameter)


backend -> frontend (response):
{
    "status" : "success" (or)
    "status" : "failed" (or)
    "status" : "bus already exists"
}







3. Mapping route with Bus

endpoint : "https://yus.kwscloud.in/yus/allocate-bus-route?route_id=3&bus_id=6"
method : Put (Query Parameter)

backend -> frontend (response):
{
    "mapped" : true (or)
    "mapped" : false 
}
